{"version":3,"sources":["components/TableRows.js","api/index.js","pages/Directory.js","App.js","index.js"],"names":["TableRows","props","console","log","className","scope","users","map","user","name","first","last","location","department","employeeNumber","id","require","API","qualifier","result","sort","a","b","i","length","push","Directory","handleSort","event","preventDefault","sortbyVar","state","newUsers","setState","handleInputChange","target","value","method","this","Jumbotron","htmlFor","onChange","onClick","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b496e78.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction TableRows(props) {\r\n    console.log(props)\r\n\r\n    return (\r\n        <table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Name</th>\r\n                    <th scope=\"col\">Location</th>\r\n                    <th scope=\"col\">Department</th>\r\n                    <th scope=\"col\">Employee Number</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.users.map(user => (\r\n\r\n                    <tr key={user.id}>\r\n                        <td>{user.name.first} {user.name.last}</td>\r\n                        <td>{user.location}</td>\r\n                        <td>{user.department}</td>\r\n                        <td>{user.employeeNumber}</td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default TableRows;","var users = require(\"./users.json\");\r\n\r\nfunction API(qualifier) {\r\n\r\n    console.log(qualifier)\r\n\r\n    let result =[];\r\n\r\n    switch(qualifier) {\r\n        case \"all\": \r\n            result = users;\r\n            break;\r\n        case \"first\":\r\n            users.sort((a, b) => (a.name.first > b.name.first) ? 1 : -1)\r\n            result = users;\r\n            break;\r\n\r\n        case \"last\":\r\n            users.sort((a, b) => (a.name.last > b.name.last) ? 1 : -1)\r\n            result = users\r\n            break;\r\n        case \"employeeNumber\":\r\n            users.sort((a, b) => (a.employeeNumber > b.employeeNumber) ? 1 : -1 )\r\n            result = users\r\n            break;\r\n        case \"london\":\r\n            result = [];\r\n            for (let i=0; i<users.length; i++){\r\n                if (users[i].location === \"London\"){\r\n                    result.push(users[i])\r\n                }\r\n            }\r\n            return (result);\r\n        case \"berlin\":\r\n            result = [];\r\n            for (let i=0; i<users.length; i++){\r\n                if (users[i].location === \"Berlin\"){\r\n                    result.push(users[i])\r\n                }\r\n            }\r\n            return (result);\r\n        case \"paris\":\r\n            result = [];\r\n            for (let i=0; i<users.length; i++){\r\n                if (users[i].location === \"Paris\"){\r\n                    result.push(users[i])\r\n                }\r\n            }\r\n            return (result);\r\n        case \"sales\":\r\n            result = [];\r\n            for (let i=0; i<users.length; i++){\r\n                if (users[i].department === \"Sales\"){\r\n                    result.push(users[i])\r\n                }\r\n            }\r\n            return (result);\r\n        case \"production\":\r\n            result = [];\r\n            for (let i=0; i<users.length; i++){\r\n                if (users[i].department === \"Production\"){\r\n                    result.push(users[i])\r\n                }\r\n            }\r\n            return (result);\r\n        case \"marketing\":\r\n            result = [];\r\n            for (let i=0; i<users.length; i++){\r\n                if (users[i].department === \"Marketing\"){\r\n                    result.push(users[i])\r\n                }\r\n            }\r\n            return (result);\r\n        default:\r\n            result = users;\r\n    }\r\n\r\n    \r\n    return (result)\r\n}\r\n\r\nexport default API","import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport TableRows from '../components/TableRows'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport API from './../api/index';\r\n\r\nclass Directory extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            qualifier: \"all\",\r\n            method: \"all\",\r\n            users: [],\r\n        }\r\n    }\r\n\r\n    handleSort = event => {\r\n        event.preventDefault();\r\n\r\n        var sortbyVar = this.state.qualifier\r\n        var newUsers = API(sortbyVar);\r\n\r\n        this.setState({ users: newUsers })\r\n\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({\r\n            qualifier: value,\r\n            method: name\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        let newUsers = API(\"all\");\r\n        this.setState({\r\n            users: newUsers\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <Jumbotron>\r\n                        <h1>Employee Directory</h1>\r\n                    </Jumbotron>\r\n\r\n                    <form>\r\n                        <div className=\"row mb-3\">\r\n                            <div className=\"col-4\">\r\n                                <label htmlFor=\"sortby\">Sort by:</label>\r\n                                <select name=\"sortby\"\r\n                                    onChange={this.handleInputChange}>\r\n                                    <option></option>\r\n                                    <option value=\"first\">First Name</option>\r\n                                    <option value=\"last\">Last Name</option>\r\n                                    <option value=\"employeeNumber\">Employee Number</option>\r\n                                </select>\r\n                                <button onClick={this.handleSort}\r\n                                    className=\"btn btn-info\">Sort!</button>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <label htmlFor=\"filterby\">Filter by:</label>\r\n                                <select name=\"filterby\"\r\n                                    onChange={this.handleInputChange}>\r\n                                    <option></option>\r\n                                    <option value=\"london\">Location: London</option>\r\n                                    <option value=\"berlin\">Location: Berlin</option>\r\n                                    <option value=\"paris\">Location: Paris</option>\r\n                                    <option value=\"sales\">Department: Sales</option>\r\n                                    <option value=\"production\">Department: Production</option>\r\n                                    <option value=\"marketing\">Department: Marketing</option>\r\n                                </select>\r\n                                <button className=\"btn btn-info\" onClick={this.handleSort}>Filter!</button>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <button className=\"btn btn-danger\" onClick={() => { this.setState({ qualifier: \"all\" }); this.handleSort() }}>RESET</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <TableRows users={this.state.users} />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Directory;","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Directory from './pages/Directory'\nimport \"./App.css\";\n\nfunction App() {\n  return (\n      <Directory></Directory>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}